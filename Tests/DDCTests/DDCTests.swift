import XCTest
@testable import DDC

class DDCTests: XCTestCase {
  let LENOVO_YOGA_2: [UInt8] = [
    0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x06, 0xaf, 0x2d, 0x20, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x16, 0x01, 0x04, 0x90, 0x1d, 0x11, 0x78, 0x02, 0xbc, 0x05, 0xa2, 0x55, 0x4c, 0x9a, 0x25,
    0x0e, 0x50, 0x54, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
    0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x1d, 0x36, 0x80, 0xa0, 0x70, 0x38, 0x1e, 0x40, 0x30, 0x20,
    0x8e, 0x00, 0x25, 0xa5, 0x10, 0x00, 0x00, 0x18, 0x1d, 0x36, 0x80, 0x08, 0x72, 0x38, 0x66, 0x40,
    0x30, 0x20, 0x8e, 0x00, 0x25, 0xa5, 0x10, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x41,
    0x55, 0x4f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xfe,
    0x00, 0x42, 0x31, 0x33, 0x33, 0x48, 0x41, 0x4e, 0x30, 0x32, 0x2e, 0x30, 0x20, 0x0a, 0x00, 0x43,
  ]

  let DELL_P2415Q: [UInt8] = [
    0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x10, 0xac, 0xc0, 0xa0, 0x4c, 0x55, 0x36, 0x30,
    0x2d, 0x18, 0x01, 0x03, 0x80, 0x35, 0x1e, 0x78, 0xea, 0xe2, 0x45, 0xa8, 0x55, 0x4d, 0xa3, 0x26,
    0x0b, 0x50, 0x54, 0xa5, 0x4b, 0x00, 0x71, 0x4f, 0x81, 0x80, 0xa9, 0xc0, 0xa9, 0x40, 0xd1, 0xc0,
    0xe1, 0x00, 0x01, 0x01, 0x01, 0x01, 0xa3, 0x66, 0x00, 0xa0, 0xf0, 0x70, 0x1f, 0x80, 0x30, 0x20,
    0x35, 0x00, 0x0f, 0x28, 0x21, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0xff, 0x00, 0x50, 0x32, 0x50,
    0x43, 0x32, 0x34, 0x42, 0x34, 0x30, 0x36, 0x55, 0x4c, 0x0a, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x44,
    0x45, 0x4c, 0x4c, 0x20, 0x50, 0x32, 0x34, 0x31, 0x35, 0x51, 0x0a, 0x20, 0x00, 0x00, 0x00, 0xfd,
    0x00, 0x1d, 0x4c, 0x1e, 0x8c, 0x1e, 0x00, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0x96,
    0x02, 0x03, 0x2a, 0xf1, 0x53, 0x90, 0x05, 0x04, 0x02, 0x07, 0x16, 0x01, 0x14, 0x1f, 0x12, 0x13,
    0x27, 0x20, 0x21, 0x22, 0x03, 0x06, 0x11, 0x15, 0x23, 0x09, 0x07, 0x07, 0x6d, 0x03, 0x0c, 0x00,
    0x10, 0x00, 0x30, 0x3c, 0x20, 0x00, 0x60, 0x03, 0x02, 0x01, 0x02, 0x3a, 0x80, 0x18, 0x71, 0x38,
    0x2d, 0x40, 0x58, 0x2c, 0x25, 0x00, 0x0f, 0x28, 0x21, 0x00, 0x00, 0x1f, 0x01, 0x1d, 0x80, 0x18,
    0x71, 0x1c, 0x16, 0x20, 0x58, 0x2c, 0x25, 0x00, 0x0f, 0x28, 0x21, 0x00, 0x00, 0x9e, 0x04, 0x74,
    0x00, 0x30, 0xf2, 0x70, 0x5a, 0x80, 0xb0, 0x58, 0x8a, 0x00, 0x0f, 0x28, 0x21, 0x00, 0x00, 0x1e,
    0x56, 0x5e, 0x00, 0xa0, 0xa0, 0xa0, 0x29, 0x50, 0x30, 0x20, 0x35, 0x00, 0x0f, 0x28, 0x21, 0x00,
    0x00, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf9,
  ]

  // Samsung LS23ELDKF (a.k.a. Samsung SyncMaster XL2370HD)
  let SAMSUMG_LS23ELDKF : [UInt8] = [
    0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x4c, 0x2d, 0x2a, 0x07, 0x33, 0x32, 0x30, 0x37,
    0x0e, 0x14, 0x01, 0x03, 0x80, 0x33, 0x1d, 0x78, 0x2a, 0x81, 0xf1, 0xa3, 0x57, 0x53, 0x9f, 0x27,
    0x0a, 0x50, 0x54, 0xbf, 0xef, 0x80, 0x81, 0x00, 0x95, 0x00, 0xb3, 0x00, 0x81, 0x40, 0x71, 0x4f,
    0x81, 0x80, 0xa9, 0x40, 0x95, 0x0f, 0x02, 0x3a, 0x80, 0x18, 0x71, 0x38, 0x2d, 0x40, 0x58, 0x2c,
    0x45, 0x00, 0xfe, 0x1f, 0x11, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0xfd, 0x00, 0x38, 0x4b, 0x1e,
    0x51, 0x11, 0x00, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x53,
    0x4d, 0x58, 0x4c, 0x32, 0x33, 0x37, 0x30, 0x48, 0x44, 0x0a, 0x20, 0x20, 0x00, 0x00, 0x00, 0xff,
    0x00, 0x48, 0x31, 0x41, 0x4b, 0x35, 0x30, 0x30, 0x30, 0x30, 0x30, 0x0a, 0x20, 0x20, 0x00, 0xa1,
  ]

  // LG 38UC99-W
  let LG_38UC99_W: [UInt8] =  [0, 255, 255, 255, 255, 255, 255, 0, 30, 109, 252, 118, 12, 211, 5, 0, 10, 27, 1, 4, 181, 87, 37, 120, 159, 202, 149, 166, 85, 78, 161, 38, 15, 80, 84, 4, 99, 128, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 209, 207, 133, 207, 0, 32, 241, 64, 116, 96, 48, 32, 122, 0, 106, 110, 49, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 253, 0, 52, 75, 125, 125, 54, 1, 10, 32, 32, 32, 32, 32, 32, 0, 0, 0, 252, 0, 76, 71, 32, 85, 76, 84, 82, 65, 87, 73, 68, 69, 10, 1, 180]

    func testExample() {
      let lenovo = EDID(data: LENOVO_YOGA_2)
      let dell = EDID(data: DELL_P2415Q)
      let samsung = EDID(data: SAMSUMG_LS23ELDKF)
      let lg = EDID(data: LG_38UC99_W)

      if let lenovo = lenovo {
        print(lenovo.standardDisplayModes)

        XCTAssertEqual(lenovo.manufacturerString(), "AUO") // AU Optronics
        XCTAssertEqual(lenovo.edidVersionString(), "1.4")
        XCTAssertEqual(lenovo.year, 2012)
     }

      if let dell = dell {
        print(dell.standardDisplayModes)

        XCTAssertEqual(dell.manufacturerString(), "DEL")
        XCTAssertEqual(dell.edidVersionString(), "1.3")
        XCTAssertEqual(dell.year, 2014)
     }

      if let samsung = samsung {
        print(samsung.standardDisplayModes)

        XCTAssertEqual(samsung.manufacturerString(), "SAM")
        XCTAssertEqual(samsung.edidVersionString(), "1.3")
        XCTAssertEqual(samsung.year, 2010)
      }

      if let lg = lg {
        print(lg.standardDisplayModes)

        XCTAssertEqual(lg.manufacturerString(), "GSM") // GoldStar
        XCTAssertEqual(lg.edidVersionString(), "1.4")
        XCTAssertEqual(lg.year, 2017)
      }



      let edid = lg

      XCTAssertNotNil(edid)

      if let edid = edid {
        XCTAssertEqual(edid.header, 0x00ffffffffffff00)




        XCTAssertEqual(edid.extensions, 1)


        XCTAssertEqual(edid.manufacturerString(), "GSM")
      }
    }

    static var allTests = [
        ("testExample", testExample),
    ]
}
